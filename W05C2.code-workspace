{
    "settings": {
        "textmarker.savedHighlights": [
            {
                "pattern": {
                    "type": "string",
                    "expression": "<button type=\"submit\" className=\"btn btn-primary btn-color-theme\"\r\n             style={{width: \"70%\",fontSize: \"36px\"}}>\r\n               <span className={this.state.submitIcon}></span>\r\n               &nbsp;{this.state.submitLabel}\r\n          </button",
                    "ignoreCase": false,
                    "wholeMatch": false
                },
                "color": "yellow"
            },
            {
                "pattern": {
                    "type": "string",
                    "expression": "submitIcon: \"fa fa-save\",\r\n                    submitLabel: \"Save Data\"",
                    "ignoreCase": false,
                    "wholeMatch": false
                },
                "color": "yellow"
            },
            {
                "pattern": {
                    "type": "string",
                    "expression": "handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      this.setState({submitIcon: \"fa fa-spin fa-spinner\", submitLabel: \"Saving...\"});\r\n      setTimeout(this.handleSubmitCallback,1000);\r\n    }",
                    "ignoreCase": false,
                    "wholeMatch": false
                },
                "color": "yellow"
            },
            {
                "pattern": {
                    "type": "string",
                    "expression": "handleSubmitCallback = () => {\r\n      this.setState({submitIcon: \"fa fa-save\", submitLabel: \"Save Data\"});\r\n      let data = this.state;\r\n      delete data.submitIcon;\r\n      delete data.submitLabel;\r\n      localStorage.setItem(\"userData\",JSON.stringify(data));\r\n      alert(\"Local user data now contains \" + localStorage.getItem(\"userData\"));\r\n    }",
                    "ignoreCase": false,
                    "wholeMatch": false
                },
                "color": "yellow"
            },
            {
                "pattern": {
                    "type": "string",
                    "expression": " holes: \"18\",\r\n                    strokes: 80,\r\n                    minutes: 50,\r\n                    seconds: \"00\",\r\n                    notes: \"\"};",
                    "ignoreCase": false,
                    "wholeMatch": false
                },
                "color": "yellow"
            },
            {
                "pattern": {
                    "type": "string",
                    "expression": ".btn-color-theme {\r\n    background-color: #13294E;\r\n    color: white;\r\n}",
                    "ignoreCase": false,
                    "wholeMatch": false
                },
                "color": "yellow"
            },
            {
                "pattern": {
                    "type": "string",
                    "expression": "computeSGS = () => {\r\n      return (Number(this.state.strokes) + Number(this.state.minutes)) \r\n                  + \":\" + this.state.seconds;\r\n    }",
                    "ignoreCase": false,
                    "wholeMatch": false
                },
                "color": "yellow"
            },
            {
                "pattern": {
                    "type": "string",
                    "expression": " handleChange = (event) => {\r\n      const name = event.target.name;\r\n      if (name === \"seconds\") {\r\n        this.setState({seconds: \r\n          (event.target.value.length < 2 ? \"0\" + event.target.value : \r\n             event.target.value)});\r\n      } else {\r\n        this.setState({[name]: event.target.value});\r\n      }\r\n    }",
                    "ignoreCase": false,
                    "wholeMatch": false
                },
                "color": "yellow"
            },
            {
                "pattern": {
                    "type": "string",
                    "expression": "this.computeSGS()",
                    "ignoreCase": false,
                    "wholeMatch": false
                },
                "color": "yellow"
            }
        ]
    },
    "folders": [
        {
            "path": "."
        }
    ]
}