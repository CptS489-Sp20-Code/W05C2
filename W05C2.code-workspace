{
    "settings": {
        "textmarker.savedHighlights": [
            {
                "pattern": {
                    "type": "string",
                    "expression": "this.state.SGS",
                    "ignoreCase": false,
                    "wholeMatch": false
                },
                "color": "yellow"
            },
            {
                "pattern": {
                    "type": "string",
                    "expression": "handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          let newSec = (event.target.value.length < 2 ? \"0\" + \r\n            event.target.value : event.target.value);\r\n          let newSGS = this.computeSGS(this.state.strokes, \r\n            this.state.minutes, newSec);\r\n          this.setState({seconds: newSec, SGS: newSGS});\r\n        } else if (name === \"strokes\") {\r\n          let newStrokes = event.target.value;\r\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \r\n            this.state.seconds);\r\n          this.setState({strokes: newStrokes, SGS: newSGS});\r\n        } else if (name === \"minutes\") {\r\n            let newMin = event.target.value;\r\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \r\n              this.state.seconds);\r\n            this.setState({minutes: newMin, SGS: newSGS});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }",
                    "ignoreCase": false,
                    "wholeMatch": false
                },
                "color": "yellow"
            },
            {
                "pattern": {
                    "type": "string",
                    "expression": "/scripts/roundform2.js",
                    "ignoreCase": false,
                    "wholeMatch": false
                },
                "color": "yellow"
            }
        ]
    },
    "folders": [
        {
            "path": "."
        }
    ]
}